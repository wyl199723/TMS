package com.wyl.tms.model;

import java.util.ArrayList;
import java.util.List;

public class MemberTypeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table member_type
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table member_type
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table member_type
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table member_type
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public MemberTypeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table member_type
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table member_type
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table member_type
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table member_type
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table member_type
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table member_type
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table member_type
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table member_type
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table member_type
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table member_type
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table member_type
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andMemberTypeIdIsNull() {
            addCriterion("memberTypeId is null");
            return (Criteria) this;
        }

        public Criteria andMemberTypeIdIsNotNull() {
            addCriterion("memberTypeId is not null");
            return (Criteria) this;
        }

        public Criteria andMemberTypeIdEqualTo(Boolean value) {
            addCriterion("memberTypeId =", value, "memberTypeId");
            return (Criteria) this;
        }

        public Criteria andMemberTypeIdNotEqualTo(Boolean value) {
            addCriterion("memberTypeId <>", value, "memberTypeId");
            return (Criteria) this;
        }

        public Criteria andMemberTypeIdGreaterThan(Boolean value) {
            addCriterion("memberTypeId >", value, "memberTypeId");
            return (Criteria) this;
        }

        public Criteria andMemberTypeIdGreaterThanOrEqualTo(Boolean value) {
            addCriterion("memberTypeId >=", value, "memberTypeId");
            return (Criteria) this;
        }

        public Criteria andMemberTypeIdLessThan(Boolean value) {
            addCriterion("memberTypeId <", value, "memberTypeId");
            return (Criteria) this;
        }

        public Criteria andMemberTypeIdLessThanOrEqualTo(Boolean value) {
            addCriterion("memberTypeId <=", value, "memberTypeId");
            return (Criteria) this;
        }

        public Criteria andMemberTypeIdIn(List<Boolean> values) {
            addCriterion("memberTypeId in", values, "memberTypeId");
            return (Criteria) this;
        }

        public Criteria andMemberTypeIdNotIn(List<Boolean> values) {
            addCriterion("memberTypeId not in", values, "memberTypeId");
            return (Criteria) this;
        }

        public Criteria andMemberTypeIdBetween(Boolean value1, Boolean value2) {
            addCriterion("memberTypeId between", value1, value2, "memberTypeId");
            return (Criteria) this;
        }

        public Criteria andMemberTypeIdNotBetween(Boolean value1, Boolean value2) {
            addCriterion("memberTypeId not between", value1, value2, "memberTypeId");
            return (Criteria) this;
        }

        public Criteria andMemberTypeNameIsNull() {
            addCriterion("memberTypeName is null");
            return (Criteria) this;
        }

        public Criteria andMemberTypeNameIsNotNull() {
            addCriterion("memberTypeName is not null");
            return (Criteria) this;
        }

        public Criteria andMemberTypeNameEqualTo(String value) {
            addCriterion("memberTypeName =", value, "memberTypeName");
            return (Criteria) this;
        }

        public Criteria andMemberTypeNameNotEqualTo(String value) {
            addCriterion("memberTypeName <>", value, "memberTypeName");
            return (Criteria) this;
        }

        public Criteria andMemberTypeNameGreaterThan(String value) {
            addCriterion("memberTypeName >", value, "memberTypeName");
            return (Criteria) this;
        }

        public Criteria andMemberTypeNameGreaterThanOrEqualTo(String value) {
            addCriterion("memberTypeName >=", value, "memberTypeName");
            return (Criteria) this;
        }

        public Criteria andMemberTypeNameLessThan(String value) {
            addCriterion("memberTypeName <", value, "memberTypeName");
            return (Criteria) this;
        }

        public Criteria andMemberTypeNameLessThanOrEqualTo(String value) {
            addCriterion("memberTypeName <=", value, "memberTypeName");
            return (Criteria) this;
        }

        public Criteria andMemberTypeNameLike(String value) {
            addCriterion("memberTypeName like", value, "memberTypeName");
            return (Criteria) this;
        }

        public Criteria andMemberTypeNameNotLike(String value) {
            addCriterion("memberTypeName not like", value, "memberTypeName");
            return (Criteria) this;
        }

        public Criteria andMemberTypeNameIn(List<String> values) {
            addCriterion("memberTypeName in", values, "memberTypeName");
            return (Criteria) this;
        }

        public Criteria andMemberTypeNameNotIn(List<String> values) {
            addCriterion("memberTypeName not in", values, "memberTypeName");
            return (Criteria) this;
        }

        public Criteria andMemberTypeNameBetween(String value1, String value2) {
            addCriterion("memberTypeName between", value1, value2, "memberTypeName");
            return (Criteria) this;
        }

        public Criteria andMemberTypeNameNotBetween(String value1, String value2) {
            addCriterion("memberTypeName not between", value1, value2, "memberTypeName");
            return (Criteria) this;
        }

        public Criteria andDiscountIsNull() {
            addCriterion("discount is null");
            return (Criteria) this;
        }

        public Criteria andDiscountIsNotNull() {
            addCriterion("discount is not null");
            return (Criteria) this;
        }

        public Criteria andDiscountEqualTo(Double value) {
            addCriterion("discount =", value, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountNotEqualTo(Double value) {
            addCriterion("discount <>", value, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountGreaterThan(Double value) {
            addCriterion("discount >", value, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountGreaterThanOrEqualTo(Double value) {
            addCriterion("discount >=", value, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountLessThan(Double value) {
            addCriterion("discount <", value, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountLessThanOrEqualTo(Double value) {
            addCriterion("discount <=", value, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountIn(List<Double> values) {
            addCriterion("discount in", values, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountNotIn(List<Double> values) {
            addCriterion("discount not in", values, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountBetween(Double value1, Double value2) {
            addCriterion("discount between", value1, value2, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountNotBetween(Double value1, Double value2) {
            addCriterion("discount not between", value1, value2, "discount");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table member_type
     *
     * @mbg.generated do_not_delete_during_merge Wed Apr 10 11:04:15 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table member_type
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}