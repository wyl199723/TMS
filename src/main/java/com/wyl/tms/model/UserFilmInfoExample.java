package com.wyl.tms.model;

import java.util.ArrayList;
import java.util.List;

public class UserFilmInfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public UserFilmInfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUserFilmInfoIdIsNull() {
            addCriterion("userFilmInfoId is null");
            return (Criteria) this;
        }

        public Criteria andUserFilmInfoIdIsNotNull() {
            addCriterion("userFilmInfoId is not null");
            return (Criteria) this;
        }

        public Criteria andUserFilmInfoIdEqualTo(Integer value) {
            addCriterion("userFilmInfoId =", value, "userFilmInfoId");
            return (Criteria) this;
        }

        public Criteria andUserFilmInfoIdNotEqualTo(Integer value) {
            addCriterion("userFilmInfoId <>", value, "userFilmInfoId");
            return (Criteria) this;
        }

        public Criteria andUserFilmInfoIdGreaterThan(Integer value) {
            addCriterion("userFilmInfoId >", value, "userFilmInfoId");
            return (Criteria) this;
        }

        public Criteria andUserFilmInfoIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("userFilmInfoId >=", value, "userFilmInfoId");
            return (Criteria) this;
        }

        public Criteria andUserFilmInfoIdLessThan(Integer value) {
            addCriterion("userFilmInfoId <", value, "userFilmInfoId");
            return (Criteria) this;
        }

        public Criteria andUserFilmInfoIdLessThanOrEqualTo(Integer value) {
            addCriterion("userFilmInfoId <=", value, "userFilmInfoId");
            return (Criteria) this;
        }

        public Criteria andUserFilmInfoIdIn(List<Integer> values) {
            addCriterion("userFilmInfoId in", values, "userFilmInfoId");
            return (Criteria) this;
        }

        public Criteria andUserFilmInfoIdNotIn(List<Integer> values) {
            addCriterion("userFilmInfoId not in", values, "userFilmInfoId");
            return (Criteria) this;
        }

        public Criteria andUserFilmInfoIdBetween(Integer value1, Integer value2) {
            addCriterion("userFilmInfoId between", value1, value2, "userFilmInfoId");
            return (Criteria) this;
        }

        public Criteria andUserFilmInfoIdNotBetween(Integer value1, Integer value2) {
            addCriterion("userFilmInfoId not between", value1, value2, "userFilmInfoId");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("userId is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("userId is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("userId =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("userId <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("userId >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("userId >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("userId <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("userId <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("userId in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("userId not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("userId between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("userId not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andFilmIdIsNull() {
            addCriterion("filmId is null");
            return (Criteria) this;
        }

        public Criteria andFilmIdIsNotNull() {
            addCriterion("filmId is not null");
            return (Criteria) this;
        }

        public Criteria andFilmIdEqualTo(Integer value) {
            addCriterion("filmId =", value, "filmId");
            return (Criteria) this;
        }

        public Criteria andFilmIdNotEqualTo(Integer value) {
            addCriterion("filmId <>", value, "filmId");
            return (Criteria) this;
        }

        public Criteria andFilmIdGreaterThan(Integer value) {
            addCriterion("filmId >", value, "filmId");
            return (Criteria) this;
        }

        public Criteria andFilmIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("filmId >=", value, "filmId");
            return (Criteria) this;
        }

        public Criteria andFilmIdLessThan(Integer value) {
            addCriterion("filmId <", value, "filmId");
            return (Criteria) this;
        }

        public Criteria andFilmIdLessThanOrEqualTo(Integer value) {
            addCriterion("filmId <=", value, "filmId");
            return (Criteria) this;
        }

        public Criteria andFilmIdIn(List<Integer> values) {
            addCriterion("filmId in", values, "filmId");
            return (Criteria) this;
        }

        public Criteria andFilmIdNotIn(List<Integer> values) {
            addCriterion("filmId not in", values, "filmId");
            return (Criteria) this;
        }

        public Criteria andFilmIdBetween(Integer value1, Integer value2) {
            addCriterion("filmId between", value1, value2, "filmId");
            return (Criteria) this;
        }

        public Criteria andFilmIdNotBetween(Integer value1, Integer value2) {
            addCriterion("filmId not between", value1, value2, "filmId");
            return (Criteria) this;
        }

        public Criteria andIsWantIsNull() {
            addCriterion("isWant is null");
            return (Criteria) this;
        }

        public Criteria andIsWantIsNotNull() {
            addCriterion("isWant is not null");
            return (Criteria) this;
        }

        public Criteria andIsWantEqualTo(Boolean value) {
            addCriterion("isWant =", value, "isWant");
            return (Criteria) this;
        }

        public Criteria andIsWantNotEqualTo(Boolean value) {
            addCriterion("isWant <>", value, "isWant");
            return (Criteria) this;
        }

        public Criteria andIsWantGreaterThan(Boolean value) {
            addCriterion("isWant >", value, "isWant");
            return (Criteria) this;
        }

        public Criteria andIsWantGreaterThanOrEqualTo(Boolean value) {
            addCriterion("isWant >=", value, "isWant");
            return (Criteria) this;
        }

        public Criteria andIsWantLessThan(Boolean value) {
            addCriterion("isWant <", value, "isWant");
            return (Criteria) this;
        }

        public Criteria andIsWantLessThanOrEqualTo(Boolean value) {
            addCriterion("isWant <=", value, "isWant");
            return (Criteria) this;
        }

        public Criteria andIsWantIn(List<Boolean> values) {
            addCriterion("isWant in", values, "isWant");
            return (Criteria) this;
        }

        public Criteria andIsWantNotIn(List<Boolean> values) {
            addCriterion("isWant not in", values, "isWant");
            return (Criteria) this;
        }

        public Criteria andIsWantBetween(Boolean value1, Boolean value2) {
            addCriterion("isWant between", value1, value2, "isWant");
            return (Criteria) this;
        }

        public Criteria andIsWantNotBetween(Boolean value1, Boolean value2) {
            addCriterion("isWant not between", value1, value2, "isWant");
            return (Criteria) this;
        }

        public Criteria andIsWatchedIsNull() {
            addCriterion("isWatched is null");
            return (Criteria) this;
        }

        public Criteria andIsWatchedIsNotNull() {
            addCriterion("isWatched is not null");
            return (Criteria) this;
        }

        public Criteria andIsWatchedEqualTo(Boolean value) {
            addCriterion("isWatched =", value, "isWatched");
            return (Criteria) this;
        }

        public Criteria andIsWatchedNotEqualTo(Boolean value) {
            addCriterion("isWatched <>", value, "isWatched");
            return (Criteria) this;
        }

        public Criteria andIsWatchedGreaterThan(Boolean value) {
            addCriterion("isWatched >", value, "isWatched");
            return (Criteria) this;
        }

        public Criteria andIsWatchedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("isWatched >=", value, "isWatched");
            return (Criteria) this;
        }

        public Criteria andIsWatchedLessThan(Boolean value) {
            addCriterion("isWatched <", value, "isWatched");
            return (Criteria) this;
        }

        public Criteria andIsWatchedLessThanOrEqualTo(Boolean value) {
            addCriterion("isWatched <=", value, "isWatched");
            return (Criteria) this;
        }

        public Criteria andIsWatchedIn(List<Boolean> values) {
            addCriterion("isWatched in", values, "isWatched");
            return (Criteria) this;
        }

        public Criteria andIsWatchedNotIn(List<Boolean> values) {
            addCriterion("isWatched not in", values, "isWatched");
            return (Criteria) this;
        }

        public Criteria andIsWatchedBetween(Boolean value1, Boolean value2) {
            addCriterion("isWatched between", value1, value2, "isWatched");
            return (Criteria) this;
        }

        public Criteria andIsWatchedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("isWatched not between", value1, value2, "isWatched");
            return (Criteria) this;
        }

        public Criteria andFilmReviewIsNull() {
            addCriterion("filmReview is null");
            return (Criteria) this;
        }

        public Criteria andFilmReviewIsNotNull() {
            addCriterion("filmReview is not null");
            return (Criteria) this;
        }

        public Criteria andFilmReviewEqualTo(String value) {
            addCriterion("filmReview =", value, "filmReview");
            return (Criteria) this;
        }

        public Criteria andFilmReviewNotEqualTo(String value) {
            addCriterion("filmReview <>", value, "filmReview");
            return (Criteria) this;
        }

        public Criteria andFilmReviewGreaterThan(String value) {
            addCriterion("filmReview >", value, "filmReview");
            return (Criteria) this;
        }

        public Criteria andFilmReviewGreaterThanOrEqualTo(String value) {
            addCriterion("filmReview >=", value, "filmReview");
            return (Criteria) this;
        }

        public Criteria andFilmReviewLessThan(String value) {
            addCriterion("filmReview <", value, "filmReview");
            return (Criteria) this;
        }

        public Criteria andFilmReviewLessThanOrEqualTo(String value) {
            addCriterion("filmReview <=", value, "filmReview");
            return (Criteria) this;
        }

        public Criteria andFilmReviewLike(String value) {
            addCriterion("filmReview like", value, "filmReview");
            return (Criteria) this;
        }

        public Criteria andFilmReviewNotLike(String value) {
            addCriterion("filmReview not like", value, "filmReview");
            return (Criteria) this;
        }

        public Criteria andFilmReviewIn(List<String> values) {
            addCriterion("filmReview in", values, "filmReview");
            return (Criteria) this;
        }

        public Criteria andFilmReviewNotIn(List<String> values) {
            addCriterion("filmReview not in", values, "filmReview");
            return (Criteria) this;
        }

        public Criteria andFilmReviewBetween(String value1, String value2) {
            addCriterion("filmReview between", value1, value2, "filmReview");
            return (Criteria) this;
        }

        public Criteria andFilmReviewNotBetween(String value1, String value2) {
            addCriterion("filmReview not between", value1, value2, "filmReview");
            return (Criteria) this;
        }

        public Criteria andFilmScoreIsNull() {
            addCriterion("filmScore is null");
            return (Criteria) this;
        }

        public Criteria andFilmScoreIsNotNull() {
            addCriterion("filmScore is not null");
            return (Criteria) this;
        }

        public Criteria andFilmScoreEqualTo(Double value) {
            addCriterion("filmScore =", value, "filmScore");
            return (Criteria) this;
        }

        public Criteria andFilmScoreNotEqualTo(Double value) {
            addCriterion("filmScore <>", value, "filmScore");
            return (Criteria) this;
        }

        public Criteria andFilmScoreGreaterThan(Double value) {
            addCriterion("filmScore >", value, "filmScore");
            return (Criteria) this;
        }

        public Criteria andFilmScoreGreaterThanOrEqualTo(Double value) {
            addCriterion("filmScore >=", value, "filmScore");
            return (Criteria) this;
        }

        public Criteria andFilmScoreLessThan(Double value) {
            addCriterion("filmScore <", value, "filmScore");
            return (Criteria) this;
        }

        public Criteria andFilmScoreLessThanOrEqualTo(Double value) {
            addCriterion("filmScore <=", value, "filmScore");
            return (Criteria) this;
        }

        public Criteria andFilmScoreIn(List<Double> values) {
            addCriterion("filmScore in", values, "filmScore");
            return (Criteria) this;
        }

        public Criteria andFilmScoreNotIn(List<Double> values) {
            addCriterion("filmScore not in", values, "filmScore");
            return (Criteria) this;
        }

        public Criteria andFilmScoreBetween(Double value1, Double value2) {
            addCriterion("filmScore between", value1, value2, "filmScore");
            return (Criteria) this;
        }

        public Criteria andFilmScoreNotBetween(Double value1, Double value2) {
            addCriterion("filmScore not between", value1, value2, "filmScore");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_film_info
     *
     * @mbg.generated do_not_delete_during_merge Wed Apr 10 11:04:15 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}