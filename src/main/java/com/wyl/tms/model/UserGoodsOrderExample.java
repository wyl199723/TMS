package com.wyl.tms.model;

import java.util.ArrayList;
import java.util.List;

public class UserGoodsOrderExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_goods_order
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_goods_order
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_goods_order
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_goods_order
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public UserGoodsOrderExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_goods_order
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_goods_order
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_goods_order
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_goods_order
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_goods_order
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_goods_order
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_goods_order
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_goods_order
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_goods_order
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_goods_order
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_goods_order
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andGoodsOrderIdIsNull() {
            addCriterion("goodsOrderId is null");
            return (Criteria) this;
        }

        public Criteria andGoodsOrderIdIsNotNull() {
            addCriterion("goodsOrderId is not null");
            return (Criteria) this;
        }

        public Criteria andGoodsOrderIdEqualTo(Integer value) {
            addCriterion("goodsOrderId =", value, "goodsOrderId");
            return (Criteria) this;
        }

        public Criteria andGoodsOrderIdNotEqualTo(Integer value) {
            addCriterion("goodsOrderId <>", value, "goodsOrderId");
            return (Criteria) this;
        }

        public Criteria andGoodsOrderIdGreaterThan(Integer value) {
            addCriterion("goodsOrderId >", value, "goodsOrderId");
            return (Criteria) this;
        }

        public Criteria andGoodsOrderIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("goodsOrderId >=", value, "goodsOrderId");
            return (Criteria) this;
        }

        public Criteria andGoodsOrderIdLessThan(Integer value) {
            addCriterion("goodsOrderId <", value, "goodsOrderId");
            return (Criteria) this;
        }

        public Criteria andGoodsOrderIdLessThanOrEqualTo(Integer value) {
            addCriterion("goodsOrderId <=", value, "goodsOrderId");
            return (Criteria) this;
        }

        public Criteria andGoodsOrderIdIn(List<Integer> values) {
            addCriterion("goodsOrderId in", values, "goodsOrderId");
            return (Criteria) this;
        }

        public Criteria andGoodsOrderIdNotIn(List<Integer> values) {
            addCriterion("goodsOrderId not in", values, "goodsOrderId");
            return (Criteria) this;
        }

        public Criteria andGoodsOrderIdBetween(Integer value1, Integer value2) {
            addCriterion("goodsOrderId between", value1, value2, "goodsOrderId");
            return (Criteria) this;
        }

        public Criteria andGoodsOrderIdNotBetween(Integer value1, Integer value2) {
            addCriterion("goodsOrderId not between", value1, value2, "goodsOrderId");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("userId is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("userId is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("userId =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("userId <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("userId >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("userId >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("userId <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("userId <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("userId in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("userId not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("userId between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("userId not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andChildGoodsOrderIdIsNull() {
            addCriterion("childGoodsOrderId is null");
            return (Criteria) this;
        }

        public Criteria andChildGoodsOrderIdIsNotNull() {
            addCriterion("childGoodsOrderId is not null");
            return (Criteria) this;
        }

        public Criteria andChildGoodsOrderIdEqualTo(Integer value) {
            addCriterion("childGoodsOrderId =", value, "childGoodsOrderId");
            return (Criteria) this;
        }

        public Criteria andChildGoodsOrderIdNotEqualTo(Integer value) {
            addCriterion("childGoodsOrderId <>", value, "childGoodsOrderId");
            return (Criteria) this;
        }

        public Criteria andChildGoodsOrderIdGreaterThan(Integer value) {
            addCriterion("childGoodsOrderId >", value, "childGoodsOrderId");
            return (Criteria) this;
        }

        public Criteria andChildGoodsOrderIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("childGoodsOrderId >=", value, "childGoodsOrderId");
            return (Criteria) this;
        }

        public Criteria andChildGoodsOrderIdLessThan(Integer value) {
            addCriterion("childGoodsOrderId <", value, "childGoodsOrderId");
            return (Criteria) this;
        }

        public Criteria andChildGoodsOrderIdLessThanOrEqualTo(Integer value) {
            addCriterion("childGoodsOrderId <=", value, "childGoodsOrderId");
            return (Criteria) this;
        }

        public Criteria andChildGoodsOrderIdIn(List<Integer> values) {
            addCriterion("childGoodsOrderId in", values, "childGoodsOrderId");
            return (Criteria) this;
        }

        public Criteria andChildGoodsOrderIdNotIn(List<Integer> values) {
            addCriterion("childGoodsOrderId not in", values, "childGoodsOrderId");
            return (Criteria) this;
        }

        public Criteria andChildGoodsOrderIdBetween(Integer value1, Integer value2) {
            addCriterion("childGoodsOrderId between", value1, value2, "childGoodsOrderId");
            return (Criteria) this;
        }

        public Criteria andChildGoodsOrderIdNotBetween(Integer value1, Integer value2) {
            addCriterion("childGoodsOrderId not between", value1, value2, "childGoodsOrderId");
            return (Criteria) this;
        }

        public Criteria andCouponIdIsNull() {
            addCriterion("couponId is null");
            return (Criteria) this;
        }

        public Criteria andCouponIdIsNotNull() {
            addCriterion("couponId is not null");
            return (Criteria) this;
        }

        public Criteria andCouponIdEqualTo(Integer value) {
            addCriterion("couponId =", value, "couponId");
            return (Criteria) this;
        }

        public Criteria andCouponIdNotEqualTo(Integer value) {
            addCriterion("couponId <>", value, "couponId");
            return (Criteria) this;
        }

        public Criteria andCouponIdGreaterThan(Integer value) {
            addCriterion("couponId >", value, "couponId");
            return (Criteria) this;
        }

        public Criteria andCouponIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("couponId >=", value, "couponId");
            return (Criteria) this;
        }

        public Criteria andCouponIdLessThan(Integer value) {
            addCriterion("couponId <", value, "couponId");
            return (Criteria) this;
        }

        public Criteria andCouponIdLessThanOrEqualTo(Integer value) {
            addCriterion("couponId <=", value, "couponId");
            return (Criteria) this;
        }

        public Criteria andCouponIdIn(List<Integer> values) {
            addCriterion("couponId in", values, "couponId");
            return (Criteria) this;
        }

        public Criteria andCouponIdNotIn(List<Integer> values) {
            addCriterion("couponId not in", values, "couponId");
            return (Criteria) this;
        }

        public Criteria andCouponIdBetween(Integer value1, Integer value2) {
            addCriterion("couponId between", value1, value2, "couponId");
            return (Criteria) this;
        }

        public Criteria andCouponIdNotBetween(Integer value1, Integer value2) {
            addCriterion("couponId not between", value1, value2, "couponId");
            return (Criteria) this;
        }

        public Criteria andGoodsOrderPriceIsNull() {
            addCriterion("goodsOrderPrice is null");
            return (Criteria) this;
        }

        public Criteria andGoodsOrderPriceIsNotNull() {
            addCriterion("goodsOrderPrice is not null");
            return (Criteria) this;
        }

        public Criteria andGoodsOrderPriceEqualTo(Double value) {
            addCriterion("goodsOrderPrice =", value, "goodsOrderPrice");
            return (Criteria) this;
        }

        public Criteria andGoodsOrderPriceNotEqualTo(Double value) {
            addCriterion("goodsOrderPrice <>", value, "goodsOrderPrice");
            return (Criteria) this;
        }

        public Criteria andGoodsOrderPriceGreaterThan(Double value) {
            addCriterion("goodsOrderPrice >", value, "goodsOrderPrice");
            return (Criteria) this;
        }

        public Criteria andGoodsOrderPriceGreaterThanOrEqualTo(Double value) {
            addCriterion("goodsOrderPrice >=", value, "goodsOrderPrice");
            return (Criteria) this;
        }

        public Criteria andGoodsOrderPriceLessThan(Double value) {
            addCriterion("goodsOrderPrice <", value, "goodsOrderPrice");
            return (Criteria) this;
        }

        public Criteria andGoodsOrderPriceLessThanOrEqualTo(Double value) {
            addCriterion("goodsOrderPrice <=", value, "goodsOrderPrice");
            return (Criteria) this;
        }

        public Criteria andGoodsOrderPriceIn(List<Double> values) {
            addCriterion("goodsOrderPrice in", values, "goodsOrderPrice");
            return (Criteria) this;
        }

        public Criteria andGoodsOrderPriceNotIn(List<Double> values) {
            addCriterion("goodsOrderPrice not in", values, "goodsOrderPrice");
            return (Criteria) this;
        }

        public Criteria andGoodsOrderPriceBetween(Double value1, Double value2) {
            addCriterion("goodsOrderPrice between", value1, value2, "goodsOrderPrice");
            return (Criteria) this;
        }

        public Criteria andGoodsOrderPriceNotBetween(Double value1, Double value2) {
            addCriterion("goodsOrderPrice not between", value1, value2, "goodsOrderPrice");
            return (Criteria) this;
        }

        public Criteria andActualPayPriceIsNull() {
            addCriterion("actualPayPrice is null");
            return (Criteria) this;
        }

        public Criteria andActualPayPriceIsNotNull() {
            addCriterion("actualPayPrice is not null");
            return (Criteria) this;
        }

        public Criteria andActualPayPriceEqualTo(Double value) {
            addCriterion("actualPayPrice =", value, "actualPayPrice");
            return (Criteria) this;
        }

        public Criteria andActualPayPriceNotEqualTo(Double value) {
            addCriterion("actualPayPrice <>", value, "actualPayPrice");
            return (Criteria) this;
        }

        public Criteria andActualPayPriceGreaterThan(Double value) {
            addCriterion("actualPayPrice >", value, "actualPayPrice");
            return (Criteria) this;
        }

        public Criteria andActualPayPriceGreaterThanOrEqualTo(Double value) {
            addCriterion("actualPayPrice >=", value, "actualPayPrice");
            return (Criteria) this;
        }

        public Criteria andActualPayPriceLessThan(Double value) {
            addCriterion("actualPayPrice <", value, "actualPayPrice");
            return (Criteria) this;
        }

        public Criteria andActualPayPriceLessThanOrEqualTo(Double value) {
            addCriterion("actualPayPrice <=", value, "actualPayPrice");
            return (Criteria) this;
        }

        public Criteria andActualPayPriceIn(List<Double> values) {
            addCriterion("actualPayPrice in", values, "actualPayPrice");
            return (Criteria) this;
        }

        public Criteria andActualPayPriceNotIn(List<Double> values) {
            addCriterion("actualPayPrice not in", values, "actualPayPrice");
            return (Criteria) this;
        }

        public Criteria andActualPayPriceBetween(Double value1, Double value2) {
            addCriterion("actualPayPrice between", value1, value2, "actualPayPrice");
            return (Criteria) this;
        }

        public Criteria andActualPayPriceNotBetween(Double value1, Double value2) {
            addCriterion("actualPayPrice not between", value1, value2, "actualPayPrice");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_goods_order
     *
     * @mbg.generated do_not_delete_during_merge Wed Apr 10 11:04:15 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_goods_order
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}