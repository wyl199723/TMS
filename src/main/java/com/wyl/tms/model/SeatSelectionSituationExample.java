package com.wyl.tms.model;

import java.util.ArrayList;
import java.util.List;

public class SeatSelectionSituationExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table seat_selection_situation
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table seat_selection_situation
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table seat_selection_situation
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seat_selection_situation
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public SeatSelectionSituationExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seat_selection_situation
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seat_selection_situation
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seat_selection_situation
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seat_selection_situation
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seat_selection_situation
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seat_selection_situation
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seat_selection_situation
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seat_selection_situation
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seat_selection_situation
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seat_selection_situation
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table seat_selection_situation
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andSeatSelectionIdIsNull() {
            addCriterion("seatSelectionId is null");
            return (Criteria) this;
        }

        public Criteria andSeatSelectionIdIsNotNull() {
            addCriterion("seatSelectionId is not null");
            return (Criteria) this;
        }

        public Criteria andSeatSelectionIdEqualTo(Integer value) {
            addCriterion("seatSelectionId =", value, "seatSelectionId");
            return (Criteria) this;
        }

        public Criteria andSeatSelectionIdNotEqualTo(Integer value) {
            addCriterion("seatSelectionId <>", value, "seatSelectionId");
            return (Criteria) this;
        }

        public Criteria andSeatSelectionIdGreaterThan(Integer value) {
            addCriterion("seatSelectionId >", value, "seatSelectionId");
            return (Criteria) this;
        }

        public Criteria andSeatSelectionIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("seatSelectionId >=", value, "seatSelectionId");
            return (Criteria) this;
        }

        public Criteria andSeatSelectionIdLessThan(Integer value) {
            addCriterion("seatSelectionId <", value, "seatSelectionId");
            return (Criteria) this;
        }

        public Criteria andSeatSelectionIdLessThanOrEqualTo(Integer value) {
            addCriterion("seatSelectionId <=", value, "seatSelectionId");
            return (Criteria) this;
        }

        public Criteria andSeatSelectionIdIn(List<Integer> values) {
            addCriterion("seatSelectionId in", values, "seatSelectionId");
            return (Criteria) this;
        }

        public Criteria andSeatSelectionIdNotIn(List<Integer> values) {
            addCriterion("seatSelectionId not in", values, "seatSelectionId");
            return (Criteria) this;
        }

        public Criteria andSeatSelectionIdBetween(Integer value1, Integer value2) {
            addCriterion("seatSelectionId between", value1, value2, "seatSelectionId");
            return (Criteria) this;
        }

        public Criteria andSeatSelectionIdNotBetween(Integer value1, Integer value2) {
            addCriterion("seatSelectionId not between", value1, value2, "seatSelectionId");
            return (Criteria) this;
        }

        public Criteria andArrangementIdIsNull() {
            addCriterion("arrangementId is null");
            return (Criteria) this;
        }

        public Criteria andArrangementIdIsNotNull() {
            addCriterion("arrangementId is not null");
            return (Criteria) this;
        }

        public Criteria andArrangementIdEqualTo(Integer value) {
            addCriterion("arrangementId =", value, "arrangementId");
            return (Criteria) this;
        }

        public Criteria andArrangementIdNotEqualTo(Integer value) {
            addCriterion("arrangementId <>", value, "arrangementId");
            return (Criteria) this;
        }

        public Criteria andArrangementIdGreaterThan(Integer value) {
            addCriterion("arrangementId >", value, "arrangementId");
            return (Criteria) this;
        }

        public Criteria andArrangementIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("arrangementId >=", value, "arrangementId");
            return (Criteria) this;
        }

        public Criteria andArrangementIdLessThan(Integer value) {
            addCriterion("arrangementId <", value, "arrangementId");
            return (Criteria) this;
        }

        public Criteria andArrangementIdLessThanOrEqualTo(Integer value) {
            addCriterion("arrangementId <=", value, "arrangementId");
            return (Criteria) this;
        }

        public Criteria andArrangementIdIn(List<Integer> values) {
            addCriterion("arrangementId in", values, "arrangementId");
            return (Criteria) this;
        }

        public Criteria andArrangementIdNotIn(List<Integer> values) {
            addCriterion("arrangementId not in", values, "arrangementId");
            return (Criteria) this;
        }

        public Criteria andArrangementIdBetween(Integer value1, Integer value2) {
            addCriterion("arrangementId between", value1, value2, "arrangementId");
            return (Criteria) this;
        }

        public Criteria andArrangementIdNotBetween(Integer value1, Integer value2) {
            addCriterion("arrangementId not between", value1, value2, "arrangementId");
            return (Criteria) this;
        }

        public Criteria andFilmOrderIdIsNull() {
            addCriterion("filmOrderId is null");
            return (Criteria) this;
        }

        public Criteria andFilmOrderIdIsNotNull() {
            addCriterion("filmOrderId is not null");
            return (Criteria) this;
        }

        public Criteria andFilmOrderIdEqualTo(Integer value) {
            addCriterion("filmOrderId =", value, "filmOrderId");
            return (Criteria) this;
        }

        public Criteria andFilmOrderIdNotEqualTo(Integer value) {
            addCriterion("filmOrderId <>", value, "filmOrderId");
            return (Criteria) this;
        }

        public Criteria andFilmOrderIdGreaterThan(Integer value) {
            addCriterion("filmOrderId >", value, "filmOrderId");
            return (Criteria) this;
        }

        public Criteria andFilmOrderIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("filmOrderId >=", value, "filmOrderId");
            return (Criteria) this;
        }

        public Criteria andFilmOrderIdLessThan(Integer value) {
            addCriterion("filmOrderId <", value, "filmOrderId");
            return (Criteria) this;
        }

        public Criteria andFilmOrderIdLessThanOrEqualTo(Integer value) {
            addCriterion("filmOrderId <=", value, "filmOrderId");
            return (Criteria) this;
        }

        public Criteria andFilmOrderIdIn(List<Integer> values) {
            addCriterion("filmOrderId in", values, "filmOrderId");
            return (Criteria) this;
        }

        public Criteria andFilmOrderIdNotIn(List<Integer> values) {
            addCriterion("filmOrderId not in", values, "filmOrderId");
            return (Criteria) this;
        }

        public Criteria andFilmOrderIdBetween(Integer value1, Integer value2) {
            addCriterion("filmOrderId between", value1, value2, "filmOrderId");
            return (Criteria) this;
        }

        public Criteria andFilmOrderIdNotBetween(Integer value1, Integer value2) {
            addCriterion("filmOrderId not between", value1, value2, "filmOrderId");
            return (Criteria) this;
        }

        public Criteria andSeatStatusIsNull() {
            addCriterion("seatStatus is null");
            return (Criteria) this;
        }

        public Criteria andSeatStatusIsNotNull() {
            addCriterion("seatStatus is not null");
            return (Criteria) this;
        }

        public Criteria andSeatStatusEqualTo(Boolean value) {
            addCriterion("seatStatus =", value, "seatStatus");
            return (Criteria) this;
        }

        public Criteria andSeatStatusNotEqualTo(Boolean value) {
            addCriterion("seatStatus <>", value, "seatStatus");
            return (Criteria) this;
        }

        public Criteria andSeatStatusGreaterThan(Boolean value) {
            addCriterion("seatStatus >", value, "seatStatus");
            return (Criteria) this;
        }

        public Criteria andSeatStatusGreaterThanOrEqualTo(Boolean value) {
            addCriterion("seatStatus >=", value, "seatStatus");
            return (Criteria) this;
        }

        public Criteria andSeatStatusLessThan(Boolean value) {
            addCriterion("seatStatus <", value, "seatStatus");
            return (Criteria) this;
        }

        public Criteria andSeatStatusLessThanOrEqualTo(Boolean value) {
            addCriterion("seatStatus <=", value, "seatStatus");
            return (Criteria) this;
        }

        public Criteria andSeatStatusIn(List<Boolean> values) {
            addCriterion("seatStatus in", values, "seatStatus");
            return (Criteria) this;
        }

        public Criteria andSeatStatusNotIn(List<Boolean> values) {
            addCriterion("seatStatus not in", values, "seatStatus");
            return (Criteria) this;
        }

        public Criteria andSeatStatusBetween(Boolean value1, Boolean value2) {
            addCriterion("seatStatus between", value1, value2, "seatStatus");
            return (Criteria) this;
        }

        public Criteria andSeatStatusNotBetween(Boolean value1, Boolean value2) {
            addCriterion("seatStatus not between", value1, value2, "seatStatus");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table seat_selection_situation
     *
     * @mbg.generated do_not_delete_during_merge Wed Apr 10 11:04:15 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table seat_selection_situation
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}