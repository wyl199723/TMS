package com.wyl.tms.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class FilmInfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public FilmInfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andFilmIdIsNull() {
            addCriterion("filmId is null");
            return (Criteria) this;
        }

        public Criteria andFilmIdIsNotNull() {
            addCriterion("filmId is not null");
            return (Criteria) this;
        }

        public Criteria andFilmIdEqualTo(Integer value) {
            addCriterion("filmId =", value, "filmId");
            return (Criteria) this;
        }

        public Criteria andFilmIdNotEqualTo(Integer value) {
            addCriterion("filmId <>", value, "filmId");
            return (Criteria) this;
        }

        public Criteria andFilmIdGreaterThan(Integer value) {
            addCriterion("filmId >", value, "filmId");
            return (Criteria) this;
        }

        public Criteria andFilmIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("filmId >=", value, "filmId");
            return (Criteria) this;
        }

        public Criteria andFilmIdLessThan(Integer value) {
            addCriterion("filmId <", value, "filmId");
            return (Criteria) this;
        }

        public Criteria andFilmIdLessThanOrEqualTo(Integer value) {
            addCriterion("filmId <=", value, "filmId");
            return (Criteria) this;
        }

        public Criteria andFilmIdIn(List<Integer> values) {
            addCriterion("filmId in", values, "filmId");
            return (Criteria) this;
        }

        public Criteria andFilmIdNotIn(List<Integer> values) {
            addCriterion("filmId not in", values, "filmId");
            return (Criteria) this;
        }

        public Criteria andFilmIdBetween(Integer value1, Integer value2) {
            addCriterion("filmId between", value1, value2, "filmId");
            return (Criteria) this;
        }

        public Criteria andFilmIdNotBetween(Integer value1, Integer value2) {
            addCriterion("filmId not between", value1, value2, "filmId");
            return (Criteria) this;
        }

        public Criteria andFilmNameIsNull() {
            addCriterion("filmName is null");
            return (Criteria) this;
        }

        public Criteria andFilmNameIsNotNull() {
            addCriterion("filmName is not null");
            return (Criteria) this;
        }

        public Criteria andFilmNameEqualTo(String value) {
            addCriterion("filmName =", value, "filmName");
            return (Criteria) this;
        }

        public Criteria andFilmNameNotEqualTo(String value) {
            addCriterion("filmName <>", value, "filmName");
            return (Criteria) this;
        }

        public Criteria andFilmNameGreaterThan(String value) {
            addCriterion("filmName >", value, "filmName");
            return (Criteria) this;
        }

        public Criteria andFilmNameGreaterThanOrEqualTo(String value) {
            addCriterion("filmName >=", value, "filmName");
            return (Criteria) this;
        }

        public Criteria andFilmNameLessThan(String value) {
            addCriterion("filmName <", value, "filmName");
            return (Criteria) this;
        }

        public Criteria andFilmNameLessThanOrEqualTo(String value) {
            addCriterion("filmName <=", value, "filmName");
            return (Criteria) this;
        }

        public Criteria andFilmNameLike(String value) {
            addCriterion("filmName like", value, "filmName");
            return (Criteria) this;
        }

        public Criteria andFilmNameNotLike(String value) {
            addCriterion("filmName not like", value, "filmName");
            return (Criteria) this;
        }

        public Criteria andFilmNameIn(List<String> values) {
            addCriterion("filmName in", values, "filmName");
            return (Criteria) this;
        }

        public Criteria andFilmNameNotIn(List<String> values) {
            addCriterion("filmName not in", values, "filmName");
            return (Criteria) this;
        }

        public Criteria andFilmNameBetween(String value1, String value2) {
            addCriterion("filmName between", value1, value2, "filmName");
            return (Criteria) this;
        }

        public Criteria andFilmNameNotBetween(String value1, String value2) {
            addCriterion("filmName not between", value1, value2, "filmName");
            return (Criteria) this;
        }

        public Criteria andPutOnDateIsNull() {
            addCriterion("putOnDate is null");
            return (Criteria) this;
        }

        public Criteria andPutOnDateIsNotNull() {
            addCriterion("putOnDate is not null");
            return (Criteria) this;
        }

        public Criteria andPutOnDateEqualTo(Date value) {
            addCriterionForJDBCDate("putOnDate =", value, "putOnDate");
            return (Criteria) this;
        }

        public Criteria andPutOnDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("putOnDate <>", value, "putOnDate");
            return (Criteria) this;
        }

        public Criteria andPutOnDateGreaterThan(Date value) {
            addCriterionForJDBCDate("putOnDate >", value, "putOnDate");
            return (Criteria) this;
        }

        public Criteria andPutOnDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("putOnDate >=", value, "putOnDate");
            return (Criteria) this;
        }

        public Criteria andPutOnDateLessThan(Date value) {
            addCriterionForJDBCDate("putOnDate <", value, "putOnDate");
            return (Criteria) this;
        }

        public Criteria andPutOnDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("putOnDate <=", value, "putOnDate");
            return (Criteria) this;
        }

        public Criteria andPutOnDateIn(List<Date> values) {
            addCriterionForJDBCDate("putOnDate in", values, "putOnDate");
            return (Criteria) this;
        }

        public Criteria andPutOnDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("putOnDate not in", values, "putOnDate");
            return (Criteria) this;
        }

        public Criteria andPutOnDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("putOnDate between", value1, value2, "putOnDate");
            return (Criteria) this;
        }

        public Criteria andPutOnDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("putOnDate not between", value1, value2, "putOnDate");
            return (Criteria) this;
        }

        public Criteria andPutOffDateIsNull() {
            addCriterion("putOffDate is null");
            return (Criteria) this;
        }

        public Criteria andPutOffDateIsNotNull() {
            addCriterion("putOffDate is not null");
            return (Criteria) this;
        }

        public Criteria andPutOffDateEqualTo(Date value) {
            addCriterionForJDBCDate("putOffDate =", value, "putOffDate");
            return (Criteria) this;
        }

        public Criteria andPutOffDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("putOffDate <>", value, "putOffDate");
            return (Criteria) this;
        }

        public Criteria andPutOffDateGreaterThan(Date value) {
            addCriterionForJDBCDate("putOffDate >", value, "putOffDate");
            return (Criteria) this;
        }

        public Criteria andPutOffDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("putOffDate >=", value, "putOffDate");
            return (Criteria) this;
        }

        public Criteria andPutOffDateLessThan(Date value) {
            addCriterionForJDBCDate("putOffDate <", value, "putOffDate");
            return (Criteria) this;
        }

        public Criteria andPutOffDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("putOffDate <=", value, "putOffDate");
            return (Criteria) this;
        }

        public Criteria andPutOffDateIn(List<Date> values) {
            addCriterionForJDBCDate("putOffDate in", values, "putOffDate");
            return (Criteria) this;
        }

        public Criteria andPutOffDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("putOffDate not in", values, "putOffDate");
            return (Criteria) this;
        }

        public Criteria andPutOffDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("putOffDate between", value1, value2, "putOffDate");
            return (Criteria) this;
        }

        public Criteria andPutOffDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("putOffDate not between", value1, value2, "putOffDate");
            return (Criteria) this;
        }

        public Criteria andTicketPriceIsNull() {
            addCriterion("ticketPrice is null");
            return (Criteria) this;
        }

        public Criteria andTicketPriceIsNotNull() {
            addCriterion("ticketPrice is not null");
            return (Criteria) this;
        }

        public Criteria andTicketPriceEqualTo(Double value) {
            addCriterion("ticketPrice =", value, "ticketPrice");
            return (Criteria) this;
        }

        public Criteria andTicketPriceNotEqualTo(Double value) {
            addCriterion("ticketPrice <>", value, "ticketPrice");
            return (Criteria) this;
        }

        public Criteria andTicketPriceGreaterThan(Double value) {
            addCriterion("ticketPrice >", value, "ticketPrice");
            return (Criteria) this;
        }

        public Criteria andTicketPriceGreaterThanOrEqualTo(Double value) {
            addCriterion("ticketPrice >=", value, "ticketPrice");
            return (Criteria) this;
        }

        public Criteria andTicketPriceLessThan(Double value) {
            addCriterion("ticketPrice <", value, "ticketPrice");
            return (Criteria) this;
        }

        public Criteria andTicketPriceLessThanOrEqualTo(Double value) {
            addCriterion("ticketPrice <=", value, "ticketPrice");
            return (Criteria) this;
        }

        public Criteria andTicketPriceIn(List<Double> values) {
            addCriterion("ticketPrice in", values, "ticketPrice");
            return (Criteria) this;
        }

        public Criteria andTicketPriceNotIn(List<Double> values) {
            addCriterion("ticketPrice not in", values, "ticketPrice");
            return (Criteria) this;
        }

        public Criteria andTicketPriceBetween(Double value1, Double value2) {
            addCriterion("ticketPrice between", value1, value2, "ticketPrice");
            return (Criteria) this;
        }

        public Criteria andTicketPriceNotBetween(Double value1, Double value2) {
            addCriterion("ticketPrice not between", value1, value2, "ticketPrice");
            return (Criteria) this;
        }

        public Criteria andFilmTypeIsNull() {
            addCriterion("filmType is null");
            return (Criteria) this;
        }

        public Criteria andFilmTypeIsNotNull() {
            addCriterion("filmType is not null");
            return (Criteria) this;
        }

        public Criteria andFilmTypeEqualTo(Integer value) {
            addCriterion("filmType =", value, "filmType");
            return (Criteria) this;
        }

        public Criteria andFilmTypeNotEqualTo(Integer value) {
            addCriterion("filmType <>", value, "filmType");
            return (Criteria) this;
        }

        public Criteria andFilmTypeGreaterThan(Integer value) {
            addCriterion("filmType >", value, "filmType");
            return (Criteria) this;
        }

        public Criteria andFilmTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("filmType >=", value, "filmType");
            return (Criteria) this;
        }

        public Criteria andFilmTypeLessThan(Integer value) {
            addCriterion("filmType <", value, "filmType");
            return (Criteria) this;
        }

        public Criteria andFilmTypeLessThanOrEqualTo(Integer value) {
            addCriterion("filmType <=", value, "filmType");
            return (Criteria) this;
        }

        public Criteria andFilmTypeIn(List<Integer> values) {
            addCriterion("filmType in", values, "filmType");
            return (Criteria) this;
        }

        public Criteria andFilmTypeNotIn(List<Integer> values) {
            addCriterion("filmType not in", values, "filmType");
            return (Criteria) this;
        }

        public Criteria andFilmTypeBetween(Integer value1, Integer value2) {
            addCriterion("filmType between", value1, value2, "filmType");
            return (Criteria) this;
        }

        public Criteria andFilmTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("filmType not between", value1, value2, "filmType");
            return (Criteria) this;
        }

        public Criteria andFilmDurationIsNull() {
            addCriterion("filmDuration is null");
            return (Criteria) this;
        }

        public Criteria andFilmDurationIsNotNull() {
            addCriterion("filmDuration is not null");
            return (Criteria) this;
        }

        public Criteria andFilmDurationEqualTo(Integer value) {
            addCriterion("filmDuration =", value, "filmDuration");
            return (Criteria) this;
        }

        public Criteria andFilmDurationNotEqualTo(Integer value) {
            addCriterion("filmDuration <>", value, "filmDuration");
            return (Criteria) this;
        }

        public Criteria andFilmDurationGreaterThan(Integer value) {
            addCriterion("filmDuration >", value, "filmDuration");
            return (Criteria) this;
        }

        public Criteria andFilmDurationGreaterThanOrEqualTo(Integer value) {
            addCriterion("filmDuration >=", value, "filmDuration");
            return (Criteria) this;
        }

        public Criteria andFilmDurationLessThan(Integer value) {
            addCriterion("filmDuration <", value, "filmDuration");
            return (Criteria) this;
        }

        public Criteria andFilmDurationLessThanOrEqualTo(Integer value) {
            addCriterion("filmDuration <=", value, "filmDuration");
            return (Criteria) this;
        }

        public Criteria andFilmDurationIn(List<Integer> values) {
            addCriterion("filmDuration in", values, "filmDuration");
            return (Criteria) this;
        }

        public Criteria andFilmDurationNotIn(List<Integer> values) {
            addCriterion("filmDuration not in", values, "filmDuration");
            return (Criteria) this;
        }

        public Criteria andFilmDurationBetween(Integer value1, Integer value2) {
            addCriterion("filmDuration between", value1, value2, "filmDuration");
            return (Criteria) this;
        }

        public Criteria andFilmDurationNotBetween(Integer value1, Integer value2) {
            addCriterion("filmDuration not between", value1, value2, "filmDuration");
            return (Criteria) this;
        }

        public Criteria andDirectorIsNull() {
            addCriterion("director is null");
            return (Criteria) this;
        }

        public Criteria andDirectorIsNotNull() {
            addCriterion("director is not null");
            return (Criteria) this;
        }

        public Criteria andDirectorEqualTo(String value) {
            addCriterion("director =", value, "director");
            return (Criteria) this;
        }

        public Criteria andDirectorNotEqualTo(String value) {
            addCriterion("director <>", value, "director");
            return (Criteria) this;
        }

        public Criteria andDirectorGreaterThan(String value) {
            addCriterion("director >", value, "director");
            return (Criteria) this;
        }

        public Criteria andDirectorGreaterThanOrEqualTo(String value) {
            addCriterion("director >=", value, "director");
            return (Criteria) this;
        }

        public Criteria andDirectorLessThan(String value) {
            addCriterion("director <", value, "director");
            return (Criteria) this;
        }

        public Criteria andDirectorLessThanOrEqualTo(String value) {
            addCriterion("director <=", value, "director");
            return (Criteria) this;
        }

        public Criteria andDirectorLike(String value) {
            addCriterion("director like", value, "director");
            return (Criteria) this;
        }

        public Criteria andDirectorNotLike(String value) {
            addCriterion("director not like", value, "director");
            return (Criteria) this;
        }

        public Criteria andDirectorIn(List<String> values) {
            addCriterion("director in", values, "director");
            return (Criteria) this;
        }

        public Criteria andDirectorNotIn(List<String> values) {
            addCriterion("director not in", values, "director");
            return (Criteria) this;
        }

        public Criteria andDirectorBetween(String value1, String value2) {
            addCriterion("director between", value1, value2, "director");
            return (Criteria) this;
        }

        public Criteria andDirectorNotBetween(String value1, String value2) {
            addCriterion("director not between", value1, value2, "director");
            return (Criteria) this;
        }

        public Criteria andMainActorIsNull() {
            addCriterion("mainActor is null");
            return (Criteria) this;
        }

        public Criteria andMainActorIsNotNull() {
            addCriterion("mainActor is not null");
            return (Criteria) this;
        }

        public Criteria andMainActorEqualTo(String value) {
            addCriterion("mainActor =", value, "mainActor");
            return (Criteria) this;
        }

        public Criteria andMainActorNotEqualTo(String value) {
            addCriterion("mainActor <>", value, "mainActor");
            return (Criteria) this;
        }

        public Criteria andMainActorGreaterThan(String value) {
            addCriterion("mainActor >", value, "mainActor");
            return (Criteria) this;
        }

        public Criteria andMainActorGreaterThanOrEqualTo(String value) {
            addCriterion("mainActor >=", value, "mainActor");
            return (Criteria) this;
        }

        public Criteria andMainActorLessThan(String value) {
            addCriterion("mainActor <", value, "mainActor");
            return (Criteria) this;
        }

        public Criteria andMainActorLessThanOrEqualTo(String value) {
            addCriterion("mainActor <=", value, "mainActor");
            return (Criteria) this;
        }

        public Criteria andMainActorLike(String value) {
            addCriterion("mainActor like", value, "mainActor");
            return (Criteria) this;
        }

        public Criteria andMainActorNotLike(String value) {
            addCriterion("mainActor not like", value, "mainActor");
            return (Criteria) this;
        }

        public Criteria andMainActorIn(List<String> values) {
            addCriterion("mainActor in", values, "mainActor");
            return (Criteria) this;
        }

        public Criteria andMainActorNotIn(List<String> values) {
            addCriterion("mainActor not in", values, "mainActor");
            return (Criteria) this;
        }

        public Criteria andMainActorBetween(String value1, String value2) {
            addCriterion("mainActor between", value1, value2, "mainActor");
            return (Criteria) this;
        }

        public Criteria andMainActorNotBetween(String value1, String value2) {
            addCriterion("mainActor not between", value1, value2, "mainActor");
            return (Criteria) this;
        }

        public Criteria andIntroductionIsNull() {
            addCriterion("introduction is null");
            return (Criteria) this;
        }

        public Criteria andIntroductionIsNotNull() {
            addCriterion("introduction is not null");
            return (Criteria) this;
        }

        public Criteria andIntroductionEqualTo(String value) {
            addCriterion("introduction =", value, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionNotEqualTo(String value) {
            addCriterion("introduction <>", value, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionGreaterThan(String value) {
            addCriterion("introduction >", value, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionGreaterThanOrEqualTo(String value) {
            addCriterion("introduction >=", value, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionLessThan(String value) {
            addCriterion("introduction <", value, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionLessThanOrEqualTo(String value) {
            addCriterion("introduction <=", value, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionLike(String value) {
            addCriterion("introduction like", value, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionNotLike(String value) {
            addCriterion("introduction not like", value, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionIn(List<String> values) {
            addCriterion("introduction in", values, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionNotIn(List<String> values) {
            addCriterion("introduction not in", values, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionBetween(String value1, String value2) {
            addCriterion("introduction between", value1, value2, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionNotBetween(String value1, String value2) {
            addCriterion("introduction not between", value1, value2, "introduction");
            return (Criteria) this;
        }

        public Criteria andCountryIsNull() {
            addCriterion("country is null");
            return (Criteria) this;
        }

        public Criteria andCountryIsNotNull() {
            addCriterion("country is not null");
            return (Criteria) this;
        }

        public Criteria andCountryEqualTo(String value) {
            addCriterion("country =", value, "country");
            return (Criteria) this;
        }

        public Criteria andCountryNotEqualTo(String value) {
            addCriterion("country <>", value, "country");
            return (Criteria) this;
        }

        public Criteria andCountryGreaterThan(String value) {
            addCriterion("country >", value, "country");
            return (Criteria) this;
        }

        public Criteria andCountryGreaterThanOrEqualTo(String value) {
            addCriterion("country >=", value, "country");
            return (Criteria) this;
        }

        public Criteria andCountryLessThan(String value) {
            addCriterion("country <", value, "country");
            return (Criteria) this;
        }

        public Criteria andCountryLessThanOrEqualTo(String value) {
            addCriterion("country <=", value, "country");
            return (Criteria) this;
        }

        public Criteria andCountryLike(String value) {
            addCriterion("country like", value, "country");
            return (Criteria) this;
        }

        public Criteria andCountryNotLike(String value) {
            addCriterion("country not like", value, "country");
            return (Criteria) this;
        }

        public Criteria andCountryIn(List<String> values) {
            addCriterion("country in", values, "country");
            return (Criteria) this;
        }

        public Criteria andCountryNotIn(List<String> values) {
            addCriterion("country not in", values, "country");
            return (Criteria) this;
        }

        public Criteria andCountryBetween(String value1, String value2) {
            addCriterion("country between", value1, value2, "country");
            return (Criteria) this;
        }

        public Criteria andCountryNotBetween(String value1, String value2) {
            addCriterion("country not between", value1, value2, "country");
            return (Criteria) this;
        }

        public Criteria andLanguageIsNull() {
            addCriterion("language is null");
            return (Criteria) this;
        }

        public Criteria andLanguageIsNotNull() {
            addCriterion("language is not null");
            return (Criteria) this;
        }

        public Criteria andLanguageEqualTo(String value) {
            addCriterion("language =", value, "language");
            return (Criteria) this;
        }

        public Criteria andLanguageNotEqualTo(String value) {
            addCriterion("language <>", value, "language");
            return (Criteria) this;
        }

        public Criteria andLanguageGreaterThan(String value) {
            addCriterion("language >", value, "language");
            return (Criteria) this;
        }

        public Criteria andLanguageGreaterThanOrEqualTo(String value) {
            addCriterion("language >=", value, "language");
            return (Criteria) this;
        }

        public Criteria andLanguageLessThan(String value) {
            addCriterion("language <", value, "language");
            return (Criteria) this;
        }

        public Criteria andLanguageLessThanOrEqualTo(String value) {
            addCriterion("language <=", value, "language");
            return (Criteria) this;
        }

        public Criteria andLanguageLike(String value) {
            addCriterion("language like", value, "language");
            return (Criteria) this;
        }

        public Criteria andLanguageNotLike(String value) {
            addCriterion("language not like", value, "language");
            return (Criteria) this;
        }

        public Criteria andLanguageIn(List<String> values) {
            addCriterion("language in", values, "language");
            return (Criteria) this;
        }

        public Criteria andLanguageNotIn(List<String> values) {
            addCriterion("language not in", values, "language");
            return (Criteria) this;
        }

        public Criteria andLanguageBetween(String value1, String value2) {
            addCriterion("language between", value1, value2, "language");
            return (Criteria) this;
        }

        public Criteria andLanguageNotBetween(String value1, String value2) {
            addCriterion("language not between", value1, value2, "language");
            return (Criteria) this;
        }

        public Criteria andFilmAvgScoreIsNull() {
            addCriterion("filmAvgScore is null");
            return (Criteria) this;
        }

        public Criteria andFilmAvgScoreIsNotNull() {
            addCriterion("filmAvgScore is not null");
            return (Criteria) this;
        }

        public Criteria andFilmAvgScoreEqualTo(Double value) {
            addCriterion("filmAvgScore =", value, "filmAvgScore");
            return (Criteria) this;
        }

        public Criteria andFilmAvgScoreNotEqualTo(Double value) {
            addCriterion("filmAvgScore <>", value, "filmAvgScore");
            return (Criteria) this;
        }

        public Criteria andFilmAvgScoreGreaterThan(Double value) {
            addCriterion("filmAvgScore >", value, "filmAvgScore");
            return (Criteria) this;
        }

        public Criteria andFilmAvgScoreGreaterThanOrEqualTo(Double value) {
            addCriterion("filmAvgScore >=", value, "filmAvgScore");
            return (Criteria) this;
        }

        public Criteria andFilmAvgScoreLessThan(Double value) {
            addCriterion("filmAvgScore <", value, "filmAvgScore");
            return (Criteria) this;
        }

        public Criteria andFilmAvgScoreLessThanOrEqualTo(Double value) {
            addCriterion("filmAvgScore <=", value, "filmAvgScore");
            return (Criteria) this;
        }

        public Criteria andFilmAvgScoreIn(List<Double> values) {
            addCriterion("filmAvgScore in", values, "filmAvgScore");
            return (Criteria) this;
        }

        public Criteria andFilmAvgScoreNotIn(List<Double> values) {
            addCriterion("filmAvgScore not in", values, "filmAvgScore");
            return (Criteria) this;
        }

        public Criteria andFilmAvgScoreBetween(Double value1, Double value2) {
            addCriterion("filmAvgScore between", value1, value2, "filmAvgScore");
            return (Criteria) this;
        }

        public Criteria andFilmAvgScoreNotBetween(Double value1, Double value2) {
            addCriterion("filmAvgScore not between", value1, value2, "filmAvgScore");
            return (Criteria) this;
        }

        public Criteria andFilmStatusIsNull() {
            addCriterion("filmStatus is null");
            return (Criteria) this;
        }

        public Criteria andFilmStatusIsNotNull() {
            addCriterion("filmStatus is not null");
            return (Criteria) this;
        }

        public Criteria andFilmStatusEqualTo(Boolean value) {
            addCriterion("filmStatus =", value, "filmStatus");
            return (Criteria) this;
        }

        public Criteria andFilmStatusNotEqualTo(Boolean value) {
            addCriterion("filmStatus <>", value, "filmStatus");
            return (Criteria) this;
        }

        public Criteria andFilmStatusGreaterThan(Boolean value) {
            addCriterion("filmStatus >", value, "filmStatus");
            return (Criteria) this;
        }

        public Criteria andFilmStatusGreaterThanOrEqualTo(Boolean value) {
            addCriterion("filmStatus >=", value, "filmStatus");
            return (Criteria) this;
        }

        public Criteria andFilmStatusLessThan(Boolean value) {
            addCriterion("filmStatus <", value, "filmStatus");
            return (Criteria) this;
        }

        public Criteria andFilmStatusLessThanOrEqualTo(Boolean value) {
            addCriterion("filmStatus <=", value, "filmStatus");
            return (Criteria) this;
        }

        public Criteria andFilmStatusIn(List<Boolean> values) {
            addCriterion("filmStatus in", values, "filmStatus");
            return (Criteria) this;
        }

        public Criteria andFilmStatusNotIn(List<Boolean> values) {
            addCriterion("filmStatus not in", values, "filmStatus");
            return (Criteria) this;
        }

        public Criteria andFilmStatusBetween(Boolean value1, Boolean value2) {
            addCriterion("filmStatus between", value1, value2, "filmStatus");
            return (Criteria) this;
        }

        public Criteria andFilmStatusNotBetween(Boolean value1, Boolean value2) {
            addCriterion("filmStatus not between", value1, value2, "filmStatus");
            return (Criteria) this;
        }

        public Criteria andIsEnabledIsNull() {
            addCriterion("isEnabled is null");
            return (Criteria) this;
        }

        public Criteria andIsEnabledIsNotNull() {
            addCriterion("isEnabled is not null");
            return (Criteria) this;
        }

        public Criteria andIsEnabledEqualTo(Boolean value) {
            addCriterion("isEnabled =", value, "isEnabled");
            return (Criteria) this;
        }

        public Criteria andIsEnabledNotEqualTo(Boolean value) {
            addCriterion("isEnabled <>", value, "isEnabled");
            return (Criteria) this;
        }

        public Criteria andIsEnabledGreaterThan(Boolean value) {
            addCriterion("isEnabled >", value, "isEnabled");
            return (Criteria) this;
        }

        public Criteria andIsEnabledGreaterThanOrEqualTo(Boolean value) {
            addCriterion("isEnabled >=", value, "isEnabled");
            return (Criteria) this;
        }

        public Criteria andIsEnabledLessThan(Boolean value) {
            addCriterion("isEnabled <", value, "isEnabled");
            return (Criteria) this;
        }

        public Criteria andIsEnabledLessThanOrEqualTo(Boolean value) {
            addCriterion("isEnabled <=", value, "isEnabled");
            return (Criteria) this;
        }

        public Criteria andIsEnabledIn(List<Boolean> values) {
            addCriterion("isEnabled in", values, "isEnabled");
            return (Criteria) this;
        }

        public Criteria andIsEnabledNotIn(List<Boolean> values) {
            addCriterion("isEnabled not in", values, "isEnabled");
            return (Criteria) this;
        }

        public Criteria andIsEnabledBetween(Boolean value1, Boolean value2) {
            addCriterion("isEnabled between", value1, value2, "isEnabled");
            return (Criteria) this;
        }

        public Criteria andIsEnabledNotBetween(Boolean value1, Boolean value2) {
            addCriterion("isEnabled not between", value1, value2, "isEnabled");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table film_info
     *
     * @mbg.generated do_not_delete_during_merge Wed Apr 10 11:04:15 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table film_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}