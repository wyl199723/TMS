package com.wyl.tms.model;

import java.util.ArrayList;
import java.util.List;

public class UserTheaterInfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_theater_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_theater_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_theater_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_theater_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public UserTheaterInfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_theater_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_theater_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_theater_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_theater_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_theater_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_theater_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_theater_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_theater_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_theater_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_theater_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_theater_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUserTheaterInfoIdIsNull() {
            addCriterion("userTheaterInfoId is null");
            return (Criteria) this;
        }

        public Criteria andUserTheaterInfoIdIsNotNull() {
            addCriterion("userTheaterInfoId is not null");
            return (Criteria) this;
        }

        public Criteria andUserTheaterInfoIdEqualTo(Integer value) {
            addCriterion("userTheaterInfoId =", value, "userTheaterInfoId");
            return (Criteria) this;
        }

        public Criteria andUserTheaterInfoIdNotEqualTo(Integer value) {
            addCriterion("userTheaterInfoId <>", value, "userTheaterInfoId");
            return (Criteria) this;
        }

        public Criteria andUserTheaterInfoIdGreaterThan(Integer value) {
            addCriterion("userTheaterInfoId >", value, "userTheaterInfoId");
            return (Criteria) this;
        }

        public Criteria andUserTheaterInfoIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("userTheaterInfoId >=", value, "userTheaterInfoId");
            return (Criteria) this;
        }

        public Criteria andUserTheaterInfoIdLessThan(Integer value) {
            addCriterion("userTheaterInfoId <", value, "userTheaterInfoId");
            return (Criteria) this;
        }

        public Criteria andUserTheaterInfoIdLessThanOrEqualTo(Integer value) {
            addCriterion("userTheaterInfoId <=", value, "userTheaterInfoId");
            return (Criteria) this;
        }

        public Criteria andUserTheaterInfoIdIn(List<Integer> values) {
            addCriterion("userTheaterInfoId in", values, "userTheaterInfoId");
            return (Criteria) this;
        }

        public Criteria andUserTheaterInfoIdNotIn(List<Integer> values) {
            addCriterion("userTheaterInfoId not in", values, "userTheaterInfoId");
            return (Criteria) this;
        }

        public Criteria andUserTheaterInfoIdBetween(Integer value1, Integer value2) {
            addCriterion("userTheaterInfoId between", value1, value2, "userTheaterInfoId");
            return (Criteria) this;
        }

        public Criteria andUserTheaterInfoIdNotBetween(Integer value1, Integer value2) {
            addCriterion("userTheaterInfoId not between", value1, value2, "userTheaterInfoId");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("userId is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("userId is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("userId =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("userId <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("userId >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("userId >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("userId <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("userId <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("userId in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("userId not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("userId between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("userId not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andTheaterIdIsNull() {
            addCriterion("theaterId is null");
            return (Criteria) this;
        }

        public Criteria andTheaterIdIsNotNull() {
            addCriterion("theaterId is not null");
            return (Criteria) this;
        }

        public Criteria andTheaterIdEqualTo(Integer value) {
            addCriterion("theaterId =", value, "theaterId");
            return (Criteria) this;
        }

        public Criteria andTheaterIdNotEqualTo(Integer value) {
            addCriterion("theaterId <>", value, "theaterId");
            return (Criteria) this;
        }

        public Criteria andTheaterIdGreaterThan(Integer value) {
            addCriterion("theaterId >", value, "theaterId");
            return (Criteria) this;
        }

        public Criteria andTheaterIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("theaterId >=", value, "theaterId");
            return (Criteria) this;
        }

        public Criteria andTheaterIdLessThan(Integer value) {
            addCriterion("theaterId <", value, "theaterId");
            return (Criteria) this;
        }

        public Criteria andTheaterIdLessThanOrEqualTo(Integer value) {
            addCriterion("theaterId <=", value, "theaterId");
            return (Criteria) this;
        }

        public Criteria andTheaterIdIn(List<Integer> values) {
            addCriterion("theaterId in", values, "theaterId");
            return (Criteria) this;
        }

        public Criteria andTheaterIdNotIn(List<Integer> values) {
            addCriterion("theaterId not in", values, "theaterId");
            return (Criteria) this;
        }

        public Criteria andTheaterIdBetween(Integer value1, Integer value2) {
            addCriterion("theaterId between", value1, value2, "theaterId");
            return (Criteria) this;
        }

        public Criteria andTheaterIdNotBetween(Integer value1, Integer value2) {
            addCriterion("theaterId not between", value1, value2, "theaterId");
            return (Criteria) this;
        }

        public Criteria andGoToFrequencyIsNull() {
            addCriterion("goToFrequency is null");
            return (Criteria) this;
        }

        public Criteria andGoToFrequencyIsNotNull() {
            addCriterion("goToFrequency is not null");
            return (Criteria) this;
        }

        public Criteria andGoToFrequencyEqualTo(Integer value) {
            addCriterion("goToFrequency =", value, "goToFrequency");
            return (Criteria) this;
        }

        public Criteria andGoToFrequencyNotEqualTo(Integer value) {
            addCriterion("goToFrequency <>", value, "goToFrequency");
            return (Criteria) this;
        }

        public Criteria andGoToFrequencyGreaterThan(Integer value) {
            addCriterion("goToFrequency >", value, "goToFrequency");
            return (Criteria) this;
        }

        public Criteria andGoToFrequencyGreaterThanOrEqualTo(Integer value) {
            addCriterion("goToFrequency >=", value, "goToFrequency");
            return (Criteria) this;
        }

        public Criteria andGoToFrequencyLessThan(Integer value) {
            addCriterion("goToFrequency <", value, "goToFrequency");
            return (Criteria) this;
        }

        public Criteria andGoToFrequencyLessThanOrEqualTo(Integer value) {
            addCriterion("goToFrequency <=", value, "goToFrequency");
            return (Criteria) this;
        }

        public Criteria andGoToFrequencyIn(List<Integer> values) {
            addCriterion("goToFrequency in", values, "goToFrequency");
            return (Criteria) this;
        }

        public Criteria andGoToFrequencyNotIn(List<Integer> values) {
            addCriterion("goToFrequency not in", values, "goToFrequency");
            return (Criteria) this;
        }

        public Criteria andGoToFrequencyBetween(Integer value1, Integer value2) {
            addCriterion("goToFrequency between", value1, value2, "goToFrequency");
            return (Criteria) this;
        }

        public Criteria andGoToFrequencyNotBetween(Integer value1, Integer value2) {
            addCriterion("goToFrequency not between", value1, value2, "goToFrequency");
            return (Criteria) this;
        }

        public Criteria andIsFavoritesIsNull() {
            addCriterion("isFavorites is null");
            return (Criteria) this;
        }

        public Criteria andIsFavoritesIsNotNull() {
            addCriterion("isFavorites is not null");
            return (Criteria) this;
        }

        public Criteria andIsFavoritesEqualTo(Boolean value) {
            addCriterion("isFavorites =", value, "isFavorites");
            return (Criteria) this;
        }

        public Criteria andIsFavoritesNotEqualTo(Boolean value) {
            addCriterion("isFavorites <>", value, "isFavorites");
            return (Criteria) this;
        }

        public Criteria andIsFavoritesGreaterThan(Boolean value) {
            addCriterion("isFavorites >", value, "isFavorites");
            return (Criteria) this;
        }

        public Criteria andIsFavoritesGreaterThanOrEqualTo(Boolean value) {
            addCriterion("isFavorites >=", value, "isFavorites");
            return (Criteria) this;
        }

        public Criteria andIsFavoritesLessThan(Boolean value) {
            addCriterion("isFavorites <", value, "isFavorites");
            return (Criteria) this;
        }

        public Criteria andIsFavoritesLessThanOrEqualTo(Boolean value) {
            addCriterion("isFavorites <=", value, "isFavorites");
            return (Criteria) this;
        }

        public Criteria andIsFavoritesIn(List<Boolean> values) {
            addCriterion("isFavorites in", values, "isFavorites");
            return (Criteria) this;
        }

        public Criteria andIsFavoritesNotIn(List<Boolean> values) {
            addCriterion("isFavorites not in", values, "isFavorites");
            return (Criteria) this;
        }

        public Criteria andIsFavoritesBetween(Boolean value1, Boolean value2) {
            addCriterion("isFavorites between", value1, value2, "isFavorites");
            return (Criteria) this;
        }

        public Criteria andIsFavoritesNotBetween(Boolean value1, Boolean value2) {
            addCriterion("isFavorites not between", value1, value2, "isFavorites");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_theater_info
     *
     * @mbg.generated do_not_delete_during_merge Wed Apr 10 11:04:15 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_theater_info
     *
     * @mbg.generated Wed Apr 10 11:04:15 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}